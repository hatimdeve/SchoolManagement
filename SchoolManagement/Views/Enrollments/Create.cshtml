@model SchoolManagement.Models.Enrollment

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(function () {
        function loadenrollment(cid) {
             $.ajax({
            url: '@Url.Action("_enrollmentPartiel","Enrollments")',
            dataType: "html",
            contentType:"application/html;charset=utf-8",
            type: "GET",
                    data: {
                        courseid:cid
                    },
            success: function (data) {
                $('#data').fadeOut().html(data).fadeIn();

                    }
        });
        }
        var cid = $("#CourseID").val();
        loadenrollment(cid)

    $("#CourseID").change(function()  {
        var cid = $("#CourseID").val();
        loadenrollment(cid)
        $("#failed").fadeOut("fast");
        $("#success").fadeOut("fast");
    });
        $("#Student_FirstName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Enrollments/GetStudents",
                    dataType: "json",
                    type:"POST",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name, id: item.Id };
                        }))

                    }
                });
            },
            minLength: 2,
            select: function (event, query) {
                console.log(query)
                $("#StudentID").val(query.item.id);
            }
        });
    });
    function Added(res) {
        if (res.IsSucess) {
            $(function () {
                $("#success").fadeIn("fast");
                $("#failed").fadeOut("fast");
                var cid = $("#CourseID").val();
                 $.ajax({
            url: '@Url.Action("_enrollmentPartiel","Enrollments")',
            dataType: "html",
            contentType:"application/html;charset=utf-8",
            type: "GET",
                    data: {
                        courseid:cid
                    },
            success: function (data) {
                $('#data').fadeOut().html(data).fadeIn();

                    }
        });
                //$("#Success").append(res.Message)
            })
        }
        else {
            Failed(res)
        }
    }
    function Failed(res) {
        if (!res.IsSucess) {
            $(function () {
                $("#failed").fadeIn("fast");
                $("#success").fadeOut("fast");
                //$("#Success").append(res.Message)
            })
        }
    }
</script>
<h2>Create</h2>

@using (Ajax.BeginForm("AddStudent","Enrollments",new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "Added",
    OnFailure = "Failed"
})) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Enrollment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div id="failed" class="alert alert-danger" style="display:none;">
        there was an error addding the student
    </div>
    <div id="success" class="alert alert-success" style="display:none;">
        student added succefully
    </div>
    <div class="form-group">
        <label for="CourseID" class="control-label col-md-2"> course</label>
        <div class="col-md-10">
            @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="Student_FirstName" class="control-label col-md-2"> student name</label>
        <div class="col-md-10">
            @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.StudentID)
            @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-success btn-block" />
        </div>
    </div>
</div>
}
<hr />
<div id="data">

</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
